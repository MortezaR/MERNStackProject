{"ast":null,"code":"import Map from './map';\nimport Camera from './camera';\nimport Wolf from './wolf';\nimport Piglet from './piglet';\nimport GObject from './gobject';\nimport resBar from './resBar';\nexport default class Game {\n  constructor(id) {\n    this.otherPlayers = {};\n    this.objects = {};\n    this.player = null;\n    this.camera = null;\n    this.resBar = null;\n    this.myId = id;\n    this.room = null;\n    this.canvas = document.getElementById(\"canvas\");\n    this.vWidth = this.canvas.width;\n    this.vHeight = this.canvas.height;\n    this.context = this.canvas.getContext(\"2d\");\n    this.gameLoop = this.gameLoop.bind(this);\n    this.gameOver = false;\n    this.solo = false;\n  }\n\n  addNewPlayer(playerData, wolf) {\n    if (this.myId === playerData.id && wolf) {\n      console.log(\"add me player wolf\");\n      this.room = {\n        width: 5000,\n        height: 5000,\n        map: new Map(5000, 5000)\n      };\n      this.room.map.generate();\n      let id = playerData.id,\n          x = playerData.x,\n          y = playerData.y,\n          width = playerData.width,\n          height = playerData.height;\n      this.myId = playerData.id;\n      this.player = new Wolf(id, x, y, width, height);\n      this.camera = new Camera(0, 0, this.vWidth, this.vHeight, this.room.width, this.room.height);\n      this.resBar = new resBar(this.player instanceof Wolf);\n      this.camera.follow(this.player, this.vWidth / 2, this.vHeight / 2);\n    } else if (this.myId === playerData.id) {\n      console.log(\"add me player pig\");\n      this.room = {\n        width: 5000,\n        height: 5000,\n        map: new Map(5000, 5000)\n      };\n      this.room.map.generate();\n      let id = playerData.id,\n          x = playerData.x,\n          y = playerData.y,\n          width = playerData.width,\n          height = playerData.height;\n      this.myId = playerData.id;\n      this.player = new Piglet(id, x, y, width, height);\n      this.camera = new Camera(0, 0, this.vWidth, this.vHeight, this.room.width, this.room.height);\n      this.resBar = new resBar(this.player instanceof Wolf);\n      let follow = this.camera.follow.bind(this);\n      this.camera.follow(this.player, this.vWidth / 2, this.vHeight / 2);\n    } else if (wolf) {\n      console.log(\"add other player wolf\");\n      let id = playerData.id,\n          x = playerData.x,\n          y = playerData.y,\n          width = playerData.width,\n          height = playerData.height;\n      let player = new Wolf(id, x, y, width, height);\n      this.otherPlayers[id] = player;\n    } else {\n      console.log(\"add other player pig\");\n      console.log(this.otherPlayers);\n      let id = playerData.id,\n          x = playerData.x,\n          y = playerData.y,\n          width = playerData.width,\n          height = playerData.height;\n      let player = new Piglet(id, x, y, width, height);\n      this.otherPlayers[id] = player;\n    }\n  }\n\n  updatePlayers(playersData) {\n    Object.values(playersData).forEach(data => {\n      if (data.id === this.myId) {\n        this.player.update(data.x, data.y, data.moveDir, data.resource, data.visible);\n        this.resBar.update(data.resource);\n        this.camera.update();\n      } else if (this.otherPlayers[data.id]) {\n        this.otherPlayers[data.id].update(data.x, data.y, data.moveDir, data.resource, data.visible);\n      }\n    });\n  }\n\n  updateObjects(objectsData) {\n    Object.values(objectsData).forEach(data => {\n      if (data.id in this.objects) {\n        this.objects[data.id].update(data.x, data.y, data.params);\n      } else {\n        this.objects[data.id] = new GObject(data.id, data.x, data.y, data.width, data.height, data.params, this.player instanceof Wolf);\n      }\n    });\n  }\n\n  updateGameInfo(objectsData) {\n    if (this.resBar) this.resBar.updateGameInfo(objectsData);\n  }\n\n  gameLoop(playerData, gameData, gameInfo) {\n    this.updatePlayers(playerData);\n    this.updateObjects(gameData);\n    this.updateGameInfo(gameInfo);\n\n    if (this.player) {\n      this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.room.map.draw(this.context, this.camera.xView, this.camera.yView);\n      Object.keys(this.objects).forEach(key => {\n        this.objects[key].draw(this.context, this.camera.xView, this.camera.yView);\n      });\n      Object.keys(this.otherPlayers).forEach(key => {\n        if (!this.otherPlayers[key].visible && this.player instanceof Wolf) {\n          console.log(this.otherPlayers[key]);\n        } else {\n          this.otherPlayers[key].draw(this.context, this.camera.xView, this.camera.yView);\n        }\n      });\n      this.player.draw(this.context, this.camera.xView, this.camera.yView);\n      this.resBar.draw(this.context);\n    }\n\n    if (this.gameOver) {\n      this.context.font = \"30px Arial\";\n      this.context.fillText(`Game is over! ${gameInfo.winner} wins!`, this.canvas.width / 2, this.canvas.height / 2);\n    }\n  }\n\n  disconnectPlayer(id) {\n    console.log(\"player disconnected\");\n    delete this.otherPlayers[id];\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/Novirius/Documents/aAProjects/MERNStackProject/frontend/src/client/game.js"],"names":["Map","Camera","Wolf","Piglet","GObject","resBar","Game","constructor","id","otherPlayers","objects","player","camera","myId","room","canvas","document","getElementById","vWidth","width","vHeight","height","context","getContext","gameLoop","bind","gameOver","solo","addNewPlayer","playerData","wolf","console","log","map","generate","x","y","follow","updatePlayers","playersData","Object","values","forEach","data","update","moveDir","resource","visible","updateObjects","objectsData","params","updateGameInfo","gameData","gameInfo","clearRect","draw","xView","yView","keys","key","font","fillText","winner","disconnectPlayer"],"mappings":"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","sourcesContent":["import Map from './map'\nimport Camera from './camera'\nimport Wolf from './wolf'\nimport Piglet from './piglet'\nimport GObject from './gobject';\nimport resBar from './resBar'\n\nexport default class Game{\n  constructor(id){\n    this.otherPlayers = {};\n    this.objects = {};\n    this.player = null;\n    this.camera = null;\n    this.resBar = null;\n    this.myId = id;\n    this.room = null;\n    this.canvas = document.getElementById(\"canvas\")\n    this.vWidth = this.canvas.width;\n    this.vHeight = this.canvas.height;\n    this.context = this.canvas.getContext(\"2d\");\n    this.gameLoop = this.gameLoop.bind(this)\n    this.gameOver = false;\n    this.solo = false;\n  }\n\n  addNewPlayer(playerData, wolf){\n    if (this.myId === playerData.id && wolf) {\n      console.log(\"add me player wolf\")\n      this.room = {\n        width: 5000,\n        height: 5000,\n        map: new Map(5000, 5000)\n      };\n      this.room.map.generate();\n      let { id, x, y, width, height } = playerData;\n      this.myId = playerData.id;\n      this.player = new Wolf (id, x, y, width, height);\n      this.camera = new Camera(0, 0, this.vWidth, this.vHeight, this.room.width, this.room.height);\n      this.resBar = new resBar(this.player instanceof Wolf);\n      this.camera.follow(this.player, this.vWidth / 2, this.vHeight / 2)  \n    } else if (this.myId === playerData.id ) {\n      console.log(\"add me player pig\")\n      this.room = {\n        width: 5000,\n        height: 5000,\n        map: new Map(5000, 5000)\n      };\n      this.room.map.generate();\n      let { id, x, y, width, height } = playerData;\n      this.myId = playerData.id;\n      this.player = new Piglet(id, x, y, width, height);\n      this.camera = new Camera(0, 0, this.vWidth, this.vHeight, this.room.width, this.room.height);\n      this.resBar = new resBar(this.player instanceof Wolf);\n      let follow = this.camera.follow.bind(this);\n      this.camera.follow(this.player, this.vWidth / 2, this.vHeight / 2)  \n    } else if (wolf) {\n      console.log(\"add other player wolf\")\n      let { id, x, y, width, height } = playerData;\n      let player = new Wolf(id, x, y, width, height);\n      this.otherPlayers[id] = player;\n    } else {\n      console.log(\"add other player pig\")\n      console.log(this.otherPlayers)\n      let { id, x, y, width, height } = playerData;\n      let player = new Piglet(id, x, y, width, height);\n      this.otherPlayers[id] = player;\n    }\n  }\n\n  updatePlayers(playersData){\n    Object.values(playersData).forEach((data) => {\n      if (data.id === this.myId) {\n\n        this.player.update(data.x, data.y, data.moveDir, data.resource, data.visible);\n        this.resBar.update(data.resource);\n        this.camera.update();\n      } else if (this.otherPlayers[data.id]) {\n        this.otherPlayers[data.id].update(data.x, data.y, data.moveDir, data.resource, data.visible);\n      }\n    })\n  }\n  updateObjects(objectsData){\n    Object.values(objectsData).forEach((data) => {\n      if (data.id in this.objects){\n        this.objects[data.id].update(data.x, data.y, data.params);\n      }else{\n        this.objects[data.id] = new GObject(data.id, data.x, data.y,\n           data.width, data.height, data.params, this.player instanceof Wolf);\n      }}\n      )\n  }\n  updateGameInfo(objectsData){\n    if (this.resBar) this.resBar.updateGameInfo(objectsData);\n  }\n\n  gameLoop(playerData, gameData, gameInfo){\n    this.updatePlayers(playerData);\n    this.updateObjects(gameData);\n    this.updateGameInfo(gameInfo);\n\n    if (this.player){\n      this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.room.map.draw(this.context, this.camera.xView, this.camera.yView);\n      Object.keys(this.objects).forEach(key => {\n        this.objects[key].draw(this.context, this.camera.xView, this.camera.yView)\n      })\n      Object.keys(this.otherPlayers).forEach(key => {\n        if (!this.otherPlayers[key].visible && this.player instanceof Wolf){\n          console.log(this.otherPlayers[key]);\n        }else{\n          this.otherPlayers[key].draw(this.context, this.camera.xView, this.camera.yView);\n        }\n      })\n      this.player.draw(this.context, this.camera.xView, this.camera.yView)\n      this.resBar.draw(this.context);\n    }\n    if (this.gameOver){\n      this.context.font = \"30px Arial\";\n      this.context.fillText(`Game is over! ${gameInfo.winner} wins!`, this.canvas.width / 2, this.canvas.height / 2);\n    }\n    \n  }\n\n  disconnectPlayer(id){\n    console.log(\"player disconnected\");\n    delete this.otherPlayers[id];\n  }\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}