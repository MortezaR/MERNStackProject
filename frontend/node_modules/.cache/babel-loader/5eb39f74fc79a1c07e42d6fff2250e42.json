{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Novirius/Documents/aAProjects/MERNStackProject/frontend/src/components/lobby/lobby.jsx\";\nimport React from 'react';\nimport './lobby.scss';\nimport ChannelIndexItem from './channel_index_item';\nimport LobbyChatMessage from './lobby_chat_message';\nimport ChannelCreationDropdown from './channel_creation_dropdown';\nimport LobbyRoomMemberDropdown from './lobby_room_member_dropdown';\nimport io from \"socket.io-client\";\nimport GameCanvas from '../gameCanvas';\nimport axios from 'axios';\n\nclass Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rooms: {},\n      messages: [],\n      currentMessage: '',\n      username: this.props.currentUser.username,\n      myRoomId: '',\n      myChatters: {},\n      myRoomName: '',\n      myId: '',\n      requestedRoomName: '',\n      inLobby: false,\n      inGame: false,\n      maps: null,\n      pickedMap: null,\n      channelsDropdownOpen: false,\n      usersDropdownOpen: false,\n      mapsDropdownOpen: false\n    }; //Variables\n\n    this.container = React.createRef(); //Socket\n\n    this.socket = process.env.NODE_ENV === 'production' ? io() : io(\"http://localhost:5000\"); //Functions\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.readyPlayer = this.readyPlayer.bind(this);\n    this.startGame = this.startGame.bind(this);\n    this.backToLobby = this.backToLobby.bind(this);\n    this.pickMap = this.pickMap.bind(this);\n    this.update = this.update.bind(this);\n    this.joinRoom = this.joinRoom.bind(this);\n    this.toggleChannelsDropdown = this.toggleChannelsDropdown.bind(this);\n    this.toggleUsersDropdown = this.toggleUsersDropdown.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.requestRoom = this.requestRoom.bind(this);\n    this.toggleMapsDropdown = this.toggleMapsDropdown.bind(this);\n    this.scrollToBottom = this.scrollToBottom.bind(this);\n  }\n\n  scrollToBottom() {\n    let bottomOfChat = document.getElementById('bottom-of-chat');\n    let chatMessage = document.getElementsByClassName('lobby-room-body-chat-messages');\n\n    if (bottomOfChat && bottomOfChat.lastChild) {\n      // bottomOfChat.lastChild.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'nearest' })\n      bottomOfChat.scrollTo;\n    }\n  }\n\n  toggleMapsDropdown() {\n    this.setState({\n      mapsDropdownOpen: !this.state.mapsDropdownOpen\n    });\n  }\n\n  toggleChannelsDropdown() {\n    this.setState({\n      channelsDropdownOpen: !this.state.channelsDropdownOpen\n    });\n  }\n\n  toggleUsersDropdown() {\n    this.setState({\n      usersDropdownOpen: !this.state.usersDropdownOpen\n    });\n  }\n\n  handleClickOutside(e) {\n    if (this.container.current && !this.container.current.contains(e.target)) {\n      this.setState({\n        channelsDropdownOpen: false,\n        usersDropdownOpen: false\n      });\n    }\n  }\n\n  pickMap(map) {\n    this.toggleMapsDropdown();\n    this.setState({\n      pickedMap: map\n    });\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n    console.log(\"component is unmounting\");\n    this.socket.emit('disconnect', this.state.myId);\n    this.socket.disconnect();\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n    this.socket.on('setupNewChatter', data => {\n      console.log(\"im receiving my own info\");\n      this.setState({\n        myId: data.id,\n        rooms: data.rooms\n      });\n    }); //add game wins here\n\n    this.socket.on('endGame', endGameData => {\n      if (endGameData.wolfId[0] === this.state.myId) {\n        if (endGameData.winner === \"wolf\") {\n          axios.patch(`/api/users/win/${this.props.currentUser.id}`);\n        } else {\n          axios.patch(`/api/users/lose/${this.props.currentUser.id}`);\n        }\n      } else {\n        endGameData.pigletIds.forEach(pigletId => {\n          if (pigletId === this.state.myId) {\n            if (endGameData.winner === \"wolf\") {\n              axios.patch(`/api/users/lose/${this.props.currentUser.id}`);\n            } else {\n              axios.patch(`/api/users/win/${this.props.currentUser.id}`);\n            }\n          }\n        });\n      }\n    });\n    this.socket.on('joinRoomInfo', data => {\n      console.log(\"im receiving room info\");\n      this.setState({\n        myChatters: data.chatters,\n        myRoomName: data.roomName,\n        myRoomId: data.roomId,\n        inLobby: true\n      });\n    });\n    this.socket.on('updateRoomsInfo', data => {\n      console.log(\"im updating rooms info\");\n      this.setState({\n        rooms: data\n      });\n    });\n    this.socket.on('updateChattersInfo', data => {\n      console.log(\"im updating chatters info\");\n      this.setState({\n        myChatters: data\n      });\n    });\n    this.socket.on('clearMsg', () => {\n      console.log(\"im clearing msg\");\n      this.setState({\n        messages: []\n      });\n    });\n    this.socket.on('disconnectUser', id => {\n      console.log(\"a user disconnected\");\n      let myChatters = this.state.myChatters;\n\n      if (Object.keys(this.state.myChatters).includes(id)) {\n        delete this.state.myChatters[id];\n      }\n\n      this.setState({\n        myChatters\n      });\n    });\n    this.socket.on('newMessage', data => {\n      console.log(\"im receiving msg\");\n      console.log(data);\n      let {\n        messages\n      } = this.state;\n      let message = {\n        currentMessage: data.currentMessage,\n        username: data.username\n      };\n      messages.push(message);\n      this.setState({\n        messages: messages\n      });\n    });\n    this.socket.on('playerIsReady', data => {\n      console.log('im ready');\n      let myChatters = this.state.myChatters;\n      myChatters[data.id].ready = data.ready;\n      this.setState({\n        myChatters\n      });\n    });\n    this.socket.on('deleteRoom', () => {\n      console.log('deleting room');\n      this.setState({\n        messages: [],\n        currentMessage: '',\n        username: this.props.currentUser.username,\n        myRoomId: '',\n        myChatters: {},\n        myRoomName: '',\n        requestedRoomName: '',\n        inLobby: false\n      });\n    });\n    this.socket.on('goToGame', () => {\n      this.setState({\n        inGame: true\n      });\n    }); //Get maps\n\n    console.log('hi');\n    axios.get('/api/maps/').then(maps => {\n      console.log(maps.data);\n      this.setState({\n        maps: maps.data,\n        pickedMap: maps.data[0]\n      });\n    });\n  }\n\n  backToLobby() {\n    this.setState({\n      rooms: {},\n      messages: [],\n      currentMessage: '',\n      username: this.props.currentUser.username,\n      myRoomId: '',\n      myChatters: {},\n      myRoomName: '',\n      myId: this.state.myId,\n      requestedRoomName: '',\n      inLobby: false,\n      inGame: false,\n      channelsDropdownOpen: false,\n      usersDropdownOpen: false,\n      mapsDropdownOpen: false\n    });\n  }\n\n  readyPlayer(id) {\n    // if (this.state.myId === id){\n    let {\n      myChatters\n    } = this.state;\n    myChatters[this.state.myId].ready = !myChatters[this.state.myId].ready;\n    let data = {\n      ready: myChatters[this.state.myId].ready,\n      roomName: this.state.myRoomName,\n      roomId: this.state.myRoomId,\n      id: this.state.myId\n    };\n    this.socket.emit('playerReady', data); // }\n  }\n\n  requestRoom() {\n    return e => {\n      console.log(\"im requesting room\");\n      e.preventDefault();\n      let data = {\n        roomName: this.state.requestedRoomName,\n        username: this.state.username,\n        myId: this.state.myId,\n        oldRoomId: this.state.myRoomId,\n        oldRoomName: this.state.myRoomName\n      };\n      this.socket.emit('requestRoom', data);\n      this.setState({\n        requestedRoomName: ''\n      });\n      this.toggleChannelsDropdown();\n    };\n  }\n\n  joinRoom(roomId) {\n    return e => {\n      console.log('IM IN A ROOM');\n      e.preventDefault();\n      if (roomId === this.state.myRoomId) return null;\n\n      if (Object.values(this.state.rooms[roomId].chatters).length === 4) {\n        let messages = this.state.messages;\n        let message = {\n          currentMessage: \"That room is too full\",\n          username: \"ErrorBot\"\n        };\n        messages.push(message);\n        this.setState({\n          messages\n        });\n      } else {\n        console.log(roomId);\n        console.log(this.state.myRoomId);\n        let {\n          myRoomId,\n          username,\n          myId,\n          myRoomName\n        } = this.state;\n        let data = {\n          roomId,\n          oldRoomId: myRoomId,\n          username: username,\n          myId: myId,\n          oldRoomName: myRoomName\n        };\n        console.log(data);\n        this.socket.emit('joinRoom', data);\n      }\n    };\n  }\n\n  update(key) {\n    return e => this.setState({\n      [key]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.currentMessage !== '') {\n      let data = {\n        currentMessage: this.state.currentMessage,\n        username: this.state.username,\n        roomName: this.state.myRoomName\n      };\n      console.log(data);\n      this.socket.emit('chatMessage', data);\n      this.setState({\n        currentMessage: ''\n      });\n    }\n  }\n\n  startGame() {\n    if (this.state.myRoomId === this.state.myId) {\n      this.socket.emit('allLobbyPlayersReady', this.state.myRoomName);\n    }\n  }\n\n  render() {\n    if (this.state.myId === '') return null;\n\n    if (this.state.inGame) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"game-canvas-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(GameCanvas, {\n        socket: this.socket,\n        roomName: this.state.myRoomName,\n        roomId: this.state.myRoomId,\n        host: this.state.myRoomId === this.state.myId,\n        backToLobby: this.backToLobby,\n        map: this.state.pickedMap,\n        myId: this.state.myId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      //Display channel name if you're in a channel\n      const channelName = this.state.myRoomName ? this.state.myRoomName : 'Channel Name';\n      const messageBox = this.state.myRoomName ? `Type in #${this.state.myRoomName}` : 'Press the + button at the top left to create a channel'; //Change button to \"play\" if everyone is ready, otherwise, just show ready/not ready\n\n      let allPlayersReady = false; //test change here\n\n      if (this.state.myRoomId !== '' && Object.values(this.state.myChatters).length === 4) {\n        allPlayersReady = Object.values(this.state.myChatters).every(user => {\n          return user.ready;\n        });\n      } //Determine what icon to generate next to player's name on bottom right\n\n\n      let readyIcon;\n\n      if (allPlayersReady && this.state.myRoomId === this.state.myId) {\n        //Play button if the user is the host and four players are ready\n        readyIcon = /*#__PURE__*/React.createElement(\"div\", {\n          onClick: this.startGame,\n          className: \"lobby-channel-index-profile-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 30\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          style: {\n            color: '#04afc3'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fas fa-play-circle fa-lg\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 59\n          }\n        })), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 29\n          }\n        }, \"PLAY!\"));\n      } else {\n        if (Object.keys(this.state.myChatters).length != 0) {\n          this.state.myChatters[this.state.myId].ready ? //Ready button if they clicked ready\n          readyIcon = /*#__PURE__*/React.createElement(\"div\", {\n            onClick: () => this.readyPlayer(this.props.currentUser.id),\n            className: \"lobby-channel-index-profile-icon\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 34\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            style: {\n              color: '#03ff95'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"far fa-check-circle fa-lg\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 63\n            }\n          })), /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 33\n            }\n          }, \"Ready!\")) : //Pending button if they have not said they're ready\n          readyIcon = /*#__PURE__*/React.createElement(\"div\", {\n            onClick: () => this.readyPlayer(this.props.currentUser.id),\n            className: \"lobby-channel-index-profile-icon\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 34\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            style: {\n              color: '#ecb708'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"far fa-question-circle fa-lg\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 63\n            }\n          })), /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 33\n            }\n          }, \"Pending\"));\n        }\n      } //Set scrollbar to bottom of chat\n\n\n      let messageBody = document.getElementsByClassName('lobby-room-body');\n      messageBody.scrollTop = messageBody.scrollHeight;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"lobby-background\",\n        ref: this.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"lobby\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"section\", {\n        className: \"lobby-channel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        className: \"lobby-channel-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"lobby-channel-header-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: this.toggleChannelsDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"JavaScript:void(0)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-plus-circle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 70\n        }\n      })), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 113\n        }\n      }, \"Channel\")), this.state.channelsDropdownOpen && /*#__PURE__*/React.createElement(ChannelCreationDropdown, {\n        requestRoom: this.requestRoom,\n        update: this.update,\n        requestedRoomName: this.state.requestedRoomName,\n        toggleChannelsDropdown: this.toggleChannelsDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"lobby-channel-index\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 29\n        }\n      }, Object.keys(this.state.rooms).map(id => /*#__PURE__*/React.createElement(ChannelIndexItem, {\n        key: id,\n        joinRoom: this.joinRoom,\n        id: id,\n        roomName: this.state.rooms[id].roomName,\n        numPlayers: Object.values(this.state.rooms[id].chatters).length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 37\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"lobby-channel-index-profile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"lobby-channel-index-profile-username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"lobby-user-username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 37\n        }\n      }, this.props.currentUser.username), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"lobby-user-id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 37\n        }\n      }, `#${this.props.currentUser.id.slice(0, 4)}`)), readyIcon)), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"lobby-room\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        className: \"lobby-room-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"lobby-room-header-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"lobby-room-header-wrapper-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 45\n        }\n      }, channelName), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"lobby-room-options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: this.toggleUsersDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-users fa-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 87\n        }\n      })), /*#__PURE__*/React.createElement(\"a\", {\n        onClick: this.toggleMapsDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-map-marked-alt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 86\n        }\n      })))))), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"bottom-of-chat\",\n        className: \"lobby-room-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 29\n        }\n      }, this.state.messages.map((message, i) => {\n        console.log(message);\n        console.log('message above');\n        let messageFromSameuser = false;\n\n        if (i !== 0 && this.state.messages[i].username === this.state.messages[i - 1].username) {\n          messageFromSameuser = true;\n        }\n\n        return /*#__PURE__*/React.createElement(LobbyChatMessage, {\n          messageFromSameuser: messageFromSameuser,\n          currentUser: this.props.currentUser,\n          message: message,\n          index: i,\n          roomName: this.state.myRoomName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 45\n          }\n        });\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"lobby-room-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        id: \"styled\",\n        placeholder: messageBox,\n        size: \"4\",\n        onChange: this.update(\"currentMessage\"),\n        value: this.state.currentMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        className: \"send-icon\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        width: \"24\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 59\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 165\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M0 0h24v24H0z\",\n        fill: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 214\n        }\n      }))))), this.state.usersDropdownOpen && /*#__PURE__*/React.createElement(LobbyRoomMemberDropdown, {\n        chatters: this.state.myChatters,\n        toggleUsersDropdown: this.toggleUsersDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 37\n        }\n      })), this.state.mapsDropdownOpen && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"map-index\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        className: \"map-index-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"map-index-header-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"map-index-header-wrapper-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 49\n        }\n      }, \"Maps\"), /*#__PURE__*/React.createElement(\"a\", {\n        onClick: this.toggleMapsDropdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fas fa-times fa-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 86\n        }\n      }))))), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"map-index-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 33\n        }\n      }, this.state.maps.map((map, i) => {\n        let selectedMap;\n\n        if (this.state.pickedMap) {\n          selectedMap = this.state.pickedMap._id === map._id ? 'selectedMap' : '';\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          onClick: () => this.pickMap(map),\n          key: i,\n          className: `map-index-map-item ${selectedMap}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 53\n          }\n        }, map.title));\n      })))));\n    }\n  }\n\n}\n\nexport default Lobby;","map":{"version":3,"sources":["/mnt/c/Users/Novirius/Documents/aAProjects/MERNStackProject/frontend/src/components/lobby/lobby.jsx"],"names":["React","ChannelIndexItem","LobbyChatMessage","ChannelCreationDropdown","LobbyRoomMemberDropdown","io","GameCanvas","axios","Lobby","Component","constructor","props","state","rooms","messages","currentMessage","username","currentUser","myRoomId","myChatters","myRoomName","myId","requestedRoomName","inLobby","inGame","maps","pickedMap","channelsDropdownOpen","usersDropdownOpen","mapsDropdownOpen","container","createRef","socket","process","env","NODE_ENV","handleSubmit","bind","readyPlayer","startGame","backToLobby","pickMap","update","joinRoom","toggleChannelsDropdown","toggleUsersDropdown","handleClickOutside","requestRoom","toggleMapsDropdown","scrollToBottom","bottomOfChat","document","getElementById","chatMessage","getElementsByClassName","lastChild","scrollTo","setState","e","current","contains","target","map","componentDidUpdate","componentWillUnmount","removeEventListener","console","log","emit","disconnect","componentDidMount","addEventListener","on","data","id","endGameData","wolfId","winner","patch","pigletIds","forEach","pigletId","chatters","roomName","roomId","Object","keys","includes","message","push","ready","get","then","preventDefault","oldRoomId","oldRoomName","values","length","key","currentTarget","value","render","channelName","messageBox","allPlayersReady","every","user","readyIcon","color","messageBody","scrollTop","scrollHeight","slice","i","messageFromSameuser","selectedMap","_id","title"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './lobby.scss';\r\nimport ChannelIndexItem from './channel_index_item';\r\nimport LobbyChatMessage from './lobby_chat_message';\r\nimport ChannelCreationDropdown from './channel_creation_dropdown';\r\nimport LobbyRoomMemberDropdown from './lobby_room_member_dropdown';\r\n\r\nimport io from \"socket.io-client\";\r\nimport GameCanvas from '../gameCanvas';\r\nimport axios from 'axios';\r\n\r\nclass Lobby extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            rooms: {},\r\n            messages: [],\r\n            currentMessage: '',\r\n            username: this.props.currentUser.username,\r\n            myRoomId: '',\r\n            myChatters: {},\r\n            myRoomName: '',\r\n            myId: '',\r\n            requestedRoomName: '',\r\n            inLobby: false,\r\n            inGame: false,\r\n            maps: null,\r\n            pickedMap: null,\r\n            channelsDropdownOpen: false,\r\n            usersDropdownOpen: false,\r\n            mapsDropdownOpen: false\r\n        }\r\n        //Variables\r\n        this.container = React.createRef();\r\n        //Socket\r\n        this.socket = process.env.NODE_ENV === 'production' ? io() : io(\"http://localhost:5000\")\r\n        //Functions\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.readyPlayer = this.readyPlayer.bind(this)\r\n        this.startGame = this.startGame.bind(this)\r\n        this.backToLobby = this.backToLobby.bind(this)\r\n        this.pickMap = this.pickMap.bind(this);\r\n        this.update = this.update.bind(this)\r\n        this.joinRoom = this.joinRoom.bind(this)\r\n        this.toggleChannelsDropdown = this.toggleChannelsDropdown.bind(this)\r\n        this.toggleUsersDropdown = this.toggleUsersDropdown.bind(this)\r\n        this.handleClickOutside = this.handleClickOutside.bind(this)\r\n        this.requestRoom = this.requestRoom.bind(this)\r\n        this.toggleMapsDropdown = this.toggleMapsDropdown.bind(this)\r\n        this.scrollToBottom = this.scrollToBottom.bind(this)\r\n    }\r\n\r\n    scrollToBottom (){\r\n        let bottomOfChat = document.getElementById('bottom-of-chat')\r\n        let chatMessage = document.getElementsByClassName('lobby-room-body-chat-messages')\r\n        if (bottomOfChat && bottomOfChat.lastChild) {\r\n            // bottomOfChat.lastChild.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'nearest' })\r\n            bottomOfChat.scrollTo\r\n        }\r\n    }\r\n\r\n    toggleMapsDropdown() {\r\n        this.setState({\r\n            mapsDropdownOpen: !this.state.mapsDropdownOpen\r\n        })\r\n    }\r\n\r\n    toggleChannelsDropdown(){\r\n        this.setState({\r\n            channelsDropdownOpen: !this.state.channelsDropdownOpen\r\n        })\r\n    }\r\n\r\n    toggleUsersDropdown(){\r\n        this.setState({\r\n            usersDropdownOpen: !this.state.usersDropdownOpen\r\n        })\r\n    }\r\n\r\n    handleClickOutside(e){\r\n        if (this.container.current && !this.container.current.contains(e.target)) {\r\n          this.setState({\r\n            channelsDropdownOpen: false,\r\n            usersDropdownOpen: false\r\n          });\r\n        }\r\n    }\r\n\r\n    pickMap(map) {\r\n        this.toggleMapsDropdown();\r\n        this.setState({\r\n            pickedMap: map\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n        console.log(\"component is unmounting\")\r\n        this.socket.emit('disconnect', this.state.myId)\r\n        this.socket.disconnect();\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n        this.socket.on('setupNewChatter', (data) => {\r\n            console.log(\"im receiving my own info\")\r\n            this.setState({\r\n                myId: data.id,\r\n                rooms: data.rooms\r\n            })\r\n        })\r\n\r\n        //add game wins here\r\n        this.socket.on('endGame', (endGameData) => {\r\n            if (endGameData.wolfId[0] === this.state.myId){\r\n                if (endGameData.winner === \"wolf\"){\r\n                    axios.patch(`/api/users/win/${this.props.currentUser.id}`)\r\n                } else {\r\n                    axios.patch(`/api/users/lose/${this.props.currentUser.id}`)\r\n                }\r\n            } else {\r\n                endGameData.pigletIds.forEach(pigletId => {\r\n                    if (pigletId === this.state.myId){\r\n                        if (endGameData.winner === \"wolf\"){\r\n                            axios.patch(`/api/users/lose/${this.props.currentUser.id}`)\r\n                        } else {\r\n                            axios.patch(`/api/users/win/${this.props.currentUser.id}`)\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n        this.socket.on('joinRoomInfo', (data) => {\r\n            console.log(\"im receiving room info\")\r\n            this.setState({\r\n                myChatters: data.chatters,\r\n                myRoomName: data.roomName,\r\n                myRoomId: data.roomId,\r\n                inLobby: true\r\n            })\r\n        })\r\n\r\n        this.socket.on('updateRoomsInfo', (data) => {\r\n            console.log(\"im updating rooms info\")\r\n            this.setState({\r\n                rooms: data\r\n            })\r\n        })\r\n\r\n        this.socket.on('updateChattersInfo', (data) => {\r\n            console.log(\"im updating chatters info\")\r\n            this.setState({\r\n                myChatters: data\r\n            })\r\n        })\r\n\r\n        this.socket.on('clearMsg', () => {\r\n            console.log(\"im clearing msg\")\r\n            this.setState({\r\n                messages: []\r\n            })\r\n        })\r\n\r\n        this.socket.on('disconnectUser', (id) => {\r\n            console.log(\"a user disconnected\")\r\n            let myChatters = this.state.myChatters\r\n            if (Object.keys(this.state.myChatters).includes(id)){\r\n                delete this.state.myChatters[id]\r\n            }\r\n            this.setState({\r\n                myChatters\r\n            })\r\n        })\r\n\r\n        this.socket.on('newMessage', (data) => {\r\n            console.log(\"im receiving msg\")\r\n            console.log(data)\r\n            let {messages} = this.state\r\n            let message = {\r\n                currentMessage: data.currentMessage, \r\n                username: data.username\r\n            }\r\n            messages.push(message)\r\n            this.setState({\r\n                messages: messages\r\n            })\r\n        })\r\n\r\n        this.socket.on('playerIsReady', (data) => {\r\n            console.log('im ready')\r\n            let myChatters = this.state.myChatters\r\n            myChatters[data.id].ready = data.ready;\r\n            this.setState({\r\n                myChatters\r\n            })\r\n        })\r\n\r\n        this.socket.on('deleteRoom', () => {\r\n            console.log('deleting room')\r\n            this.setState({\r\n                messages: [],\r\n                currentMessage: '',\r\n                username: this.props.currentUser.username,\r\n                myRoomId: '',\r\n                myChatters: {},\r\n                myRoomName: '',\r\n                requestedRoomName: '',\r\n                inLobby: false\r\n            })\r\n        })\r\n\r\n        this.socket.on('goToGame', () => {\r\n            this.setState({inGame: true})\r\n        })\r\n\r\n        //Get maps\r\n        console.log('hi')\r\n        axios.get('/api/maps/')\r\n        .then(maps => \r\n            \r\n        {\r\n            console.log(maps.data)\r\n            this.setState({\r\n                maps: maps.data,\r\n                pickedMap: maps.data[0] \r\n            })\r\n        }\r\n        )\r\n    }\r\n\r\n    backToLobby(){\r\n        this.setState({\r\n            rooms: {},\r\n            messages: [],\r\n            currentMessage: '',\r\n            username: this.props.currentUser.username,\r\n            myRoomId: '',\r\n            myChatters: {},\r\n            myRoomName: '',\r\n            myId: this.state.myId,\r\n            requestedRoomName: '',\r\n            inLobby: false,\r\n            inGame: false,\r\n            channelsDropdownOpen: false,\r\n            usersDropdownOpen: false,\r\n            mapsDropdownOpen: false\r\n        })\r\n    }\r\n\r\n    readyPlayer(id){\r\n        // if (this.state.myId === id){\r\n            let {myChatters} = this.state\r\n            myChatters[this.state.myId].ready = !myChatters[this.state.myId].ready \r\n            let data = { ready: myChatters[this.state.myId].ready,\r\n                roomName: this.state.myRoomName,\r\n                roomId: this.state.myRoomId,\r\n                id: this.state.myId\r\n            }\r\n            this.socket.emit('playerReady', data)\r\n        // }\r\n    }\r\n\r\n    requestRoom(){\r\n        return e => {\r\n            console.log(\"im requesting room\")\r\n            e.preventDefault();\r\n            let data = {\r\n                roomName: this.state.requestedRoomName, \r\n                username: this.state.username,\r\n                myId: this.state.myId,\r\n                oldRoomId: this.state.myRoomId,\r\n                oldRoomName: this.state.myRoomName\r\n            }\r\n            this.socket.emit('requestRoom', data)\r\n            this.setState({\r\n                requestedRoomName: ''\r\n            })\r\n            this.toggleChannelsDropdown();\r\n        }\r\n    }\r\n\r\n    joinRoom(roomId){\r\n        return e => {\r\n            console.log('IM IN A ROOM')\r\n            e.preventDefault();\r\n            if (roomId === this.state.myRoomId) return null\r\n            if (Object.values(this.state.rooms[roomId].chatters).length === 4) {\r\n                let messages = this.state.messages\r\n                let message = {\r\n                    currentMessage: \"That room is too full\",\r\n                    username: \"ErrorBot\"\r\n                }\r\n                messages.push(message)\r\n                this.setState({\r\n                    messages\r\n                })\r\n            } else {\r\n                console.log(roomId)\r\n                console.log(this.state.myRoomId)\r\n                let { myRoomId, username, myId, myRoomName } = this.state\r\n                let data = {\r\n                    roomId,\r\n                    oldRoomId: myRoomId,\r\n                    username: username,\r\n                    myId: myId,\r\n                    oldRoomName: myRoomName\r\n                }\r\n                console.log(data)\r\n                this.socket.emit('joinRoom', data)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    update(key) {\r\n        return e => this.setState({\r\n            [key]: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        if (this.state.currentMessage !== '') {\r\n            let data = {\r\n                currentMessage: this.state.currentMessage,\r\n                username: this.state.username,\r\n                roomName: this.state.myRoomName\r\n            }\r\n            console.log(data)\r\n            this.socket.emit('chatMessage', data);\r\n            this.setState({\r\n                currentMessage: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    startGame(){\r\n        if (this.state.myRoomId === this.state.myId){\r\n            this.socket.emit('allLobbyPlayersReady', this.state.myRoomName)\r\n        }\r\n    }\r\n    render () {\r\n        if (this.state.myId === '') return null\r\n        if (this.state.inGame){\r\n            return (\r\n                <div className=\"game-canvas-div\">\r\n                    <GameCanvas \r\n                        socket={this.socket} \r\n                        roomName={this.state.myRoomName} \r\n                        roomId={this.state.myRoomId} \r\n                        host={this.state.myRoomId===this.state.myId}\r\n                        backToLobby={this.backToLobby}\r\n                        map={this.state.pickedMap}\r\n                        myId={this.state.myId}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            //Display channel name if you're in a channel\r\n            const channelName = this.state.myRoomName ? this.state.myRoomName : 'Channel Name'\r\n            const messageBox = this.state.myRoomName ? `Type in #${this.state.myRoomName}` : 'Press the + button at the top left to create a channel'\r\n            //Change button to \"play\" if everyone is ready, otherwise, just show ready/not ready\r\n            let allPlayersReady = false;\r\n\r\n            //test change here\r\n            if((this.state.myRoomId!=='') && Object.values(this.state.myChatters).length === 4){\r\n                allPlayersReady = Object.values(this.state.myChatters).every((user) => {\r\n                    return user.ready\r\n                })\r\n            }\r\n            //Determine what icon to generate next to player's name on bottom right\r\n            let readyIcon;\r\n            if (allPlayersReady && this.state.myRoomId === this.state.myId) {\r\n                //Play button if the user is the host and four players are ready\r\n                readyIcon = (<div onClick={this.startGame} className=\"lobby-channel-index-profile-icon\">\r\n                            <a style={{color: '#04afc3'}}><i class=\"fas fa-play-circle fa-lg\"></i></a>\r\n                            <span>PLAY!</span>\r\n                            </div>)\r\n            }\r\n            else {\r\n                if (Object.keys(this.state.myChatters).length != 0) {\r\n                    this.state.myChatters[this.state.myId].ready ?\r\n                    //Ready button if they clicked ready\r\n                    readyIcon = (<div onClick={() => this.readyPlayer(this.props.currentUser.id)}  className=\"lobby-channel-index-profile-icon\">\r\n                                <a style={{color: '#03ff95'}}><i className=\"far fa-check-circle fa-lg\"></i></a>\r\n                                <span>Ready!</span>\r\n                                </div>)\r\n                    :\r\n                    //Pending button if they have not said they're ready\r\n                    readyIcon = (<div onClick={() => this.readyPlayer(this.props.currentUser.id)}  className=\"lobby-channel-index-profile-icon\">\r\n                                <a style={{color: '#ecb708'}}><i className=\"far fa-question-circle fa-lg\"></i></a>\r\n                                <span>Pending</span>\r\n                                </div>)\r\n                }\r\n            }\r\n\r\n            //Set scrollbar to bottom of chat\r\n            let messageBody = document.getElementsByClassName('lobby-room-body');\r\n            messageBody.scrollTop = messageBody.scrollHeight;\r\n            return (\r\n                <div className=\"lobby-background\" ref={this.container}>\r\n                    <div className=\"lobby\">\r\n                        <section className=\"lobby-channel\">\r\n                            <header className=\"lobby-channel-header\">\r\n                                <div className=\"lobby-channel-header-wrapper\">\r\n                                    <div onClick={this.toggleChannelsDropdown}>\r\n                                        <a href=\"JavaScript:void(0)\"><i className=\"fas fa-plus-circle\"></i></a> <span>Channel</span>\r\n                                    </div>\r\n                                    {\r\n                                        this.state.channelsDropdownOpen && (\r\n                                            <ChannelCreationDropdown \r\n                                                requestRoom={this.requestRoom} \r\n                                                update={this.update} \r\n                                                requestedRoomName={this.state.requestedRoomName}\r\n                                                toggleChannelsDropdown={this.toggleChannelsDropdown}\r\n                                            />\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </header>\r\n                            <nav className=\"lobby-channel-index\">\r\n                            {\r\n                                Object.keys(this.state.rooms).map(id => \r\n                                    <ChannelIndexItem\r\n                                        key={id}\r\n                                        joinRoom={this.joinRoom}\r\n                                        id={id} \r\n                                        roomName={this.state.rooms[id].roomName} \r\n                                        numPlayers={Object.values(this.state.rooms[id].chatters).length}\r\n                                    />\r\n                                )\r\n                            }\r\n                            </nav>\r\n                            <div className=\"lobby-channel-index-profile\">\r\n                                <div className=\"lobby-channel-index-profile-username\">\r\n                                    <span className=\"lobby-user-username\">{this.props.currentUser.username}</span>\r\n                                    <span className=\"lobby-user-id\">{`#${this.props.currentUser.id.slice(0,4)}`}</span>\r\n                                </div>\r\n                                {\r\n                                    readyIcon\r\n                                }\r\n                            </div>\r\n                        </section>\r\n                        <section className=\"lobby-room\">\r\n                            <header className=\"lobby-room-header\">\r\n                                    <div className=\"lobby-room-header-wrapper\">\r\n                                        <div className=\"lobby-room-header-wrapper-content\">\r\n                                            <span>{channelName}</span>\r\n                                            <div className=\"lobby-room-options\">\r\n                                                <a onClick={this.toggleUsersDropdown}><i className=\"fas fa-users fa-lg\"></i></a>\r\n                                                <a onClick={this.toggleMapsDropdown}><i className=\"fas fa-map-marked-alt\"></i></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                            </header>\r\n                            <div id=\"bottom-of-chat\" className=\"lobby-room-body\">\r\n                                {\r\n                                    this.state.messages.map((message, i) => {\r\n                                        console.log(message)\r\n                                        console.log('message above')\r\n                                        let messageFromSameuser = false;\r\n                                        if ((i !== 0) && (this.state.messages[i].username === this.state.messages[i-1].username)) {\r\n                                            messageFromSameuser = true;\r\n                                        }\r\n                                        return (\r\n                                            <LobbyChatMessage \r\n                                                messageFromSameuser={messageFromSameuser} \r\n                                                currentUser={this.props.currentUser} \r\n                                                message={message} \r\n                                                index={i} \r\n                                                roomName={this.state.myRoomName} \r\n                                            />\r\n                                        )\r\n                                    })\r\n                                }\r\n                            {/* <div style={{ float:\"left\", clear: \"both\" }}  /> */}\r\n                            </div>\r\n                            <div className=\"lobby-room-input\">\r\n                                <form onSubmit={this.handleSubmit}>\r\n                                    <input  \r\n                                        id=\"styled\"\r\n                                        placeholder={messageBox} \r\n                                        size=\"4\"\r\n                                        onChange={this.update(\"currentMessage\")}\r\n                                        value={this.state.currentMessage}\r\n                                    />\r\n                                    <button type=\"submit\"><svg  className=\"send-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg></button>\r\n                                </form>\r\n\r\n                            </div>\r\n                            {\r\n                                this.state.usersDropdownOpen && (\r\n                                    <LobbyRoomMemberDropdown \r\n                                        chatters={this.state.myChatters}\r\n                                        toggleUsersDropdown={this.toggleUsersDropdown}\r\n                                    />\r\n                                )\r\n                            }\r\n\r\n                        </section>\r\n                {\r\n                        this.state.mapsDropdownOpen && (\r\n                            <div className=\"map-index\">\r\n                                <header className=\"map-index-header\">\r\n                                        <div className=\"map-index-header-wrapper\">\r\n                                            <div className=\"map-index-header-wrapper-content\">\r\n                                                <span>Maps</span>\r\n                                                <a onClick={this.toggleMapsDropdown}><i class=\"fas fa-times fa-lg\"></i></a>\r\n                                            </div>\r\n                                        </div>\r\n                                </header>\r\n                                <section className=\"map-index-container\">\r\n                                    {\r\n                                        this.state.maps.map((map, i) => {\r\n                                            let selectedMap;\r\n                                            if (this.state.pickedMap) {\r\n                                                selectedMap = (this.state.pickedMap._id === map._id) ? 'selectedMap' : ''\r\n                                            }\r\n                                        return (<div onClick={()=>this.pickMap(map)} key={i} className={`map-index-map-item ${selectedMap}`}>\r\n                                                    <span>{map.title}</span>\r\n                                                </div>)\r\n                                        })\r\n                                    }\r\n                                </section>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    </div>\r\n                </div>\r\n                )\r\n        }\r\n\r\n    }\r\n\r\n}\r\nexport default Lobby;"]},"metadata":{},"sourceType":"module"}