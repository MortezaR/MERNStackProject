{"ast":null,"code":"export default class Sprite {\n  constructor(img, height, width, loopLeng, startFramePos, parentObj, maxFrameCount = 15) {\n    this.image = new Image();\n    this.image.src = img;\n    this.loopLeng = loopLeng;\n    this.loopC = 0;\n    this.frameCount = 0;\n    this.height = height;\n    this.width = width;\n    this.startFramePos = startFramePos;\n    this.step = this.step.bind(this);\n    this.drawFrame = this.drawFrame.bind(this);\n    this.parentObj = parentObj;\n    this.maxFrameCount = maxFrameCount;\n    this.invisible = true;\n  }\n\n  step(ctx, object, xView, yView, heightMultiplier = 1, widthMultiplier = 1, trapped) {\n    this.frameCount++;\n\n    if (this.loopC >= this.loopLeng && trapped) {\n      this.drawFinalFrame(ctx, object, xView, yView, heightMultiplier, widthMultiplier);\n    } else {\n      this.drawFrame(ctx, object, xView, yView, heightMultiplier, widthMultiplier);\n    }\n\n    if (this.frameCount < this.maxFrameCount) {\n      return;\n    }\n\n    this.frameCount = 0;\n    this.loopC++;\n\n    if (this.loopC >= this.loopLeng && !trapped) {\n      this.loopC = 0;\n\n      if (this.parentObj) {\n        this.parentObj.attacking = false;\n      }\n    }\n  }\n\n  drawFrame(ctx, object, xView, yView, heightMultiplier = 1, widthMultiplier = 1) {\n    ctx.drawImage(this.image, this.loopC * this.width, this.startFramePos[1], this.width, this.height, object.x - object.width / 2 - xView, object.y - object.height / 2 - yView, this.width * widthMultiplier, this.height * heightMultiplier);\n  }\n\n  drawFirstFrame(ctx, object, xView, yView, heightMultiplier = 1, widthMultiplier = 1) {\n    ctx.drawImage(this.image, this.startFramePos[0], this.startFramePos[1], this.width, this.height, object.x - object.width / 2 - xView, object.y - object.height / 2 - yView, this.width * widthMultiplier, this.height * heightMultiplier);\n  }\n\n  drawFinalFrame(ctx, object, xView, yView, heightMultiplier = 1, widthMultiplier = 1) {\n    ctx.drawImage(this.image, (this.loopLeng - 1) * this.width, this.startFramePos[1], this.width, this.height, object.x - object.width / 2 - xView, object.y - object.height / 2 - yView, this.height * heightMultiplier, this.width * widthMultiplier);\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/Novirius/Documents/aAProjects/MERNStackProject/frontend/src/client/sprite.js"],"names":["Sprite","constructor","img","height","width","loopLeng","startFramePos","parentObj","maxFrameCount","image","Image","src","loopC","frameCount","step","bind","drawFrame","invisible","ctx","object","xView","yView","heightMultiplier","widthMultiplier","trapped","drawFinalFrame","attacking","drawImage","x","y","drawFirstFrame"],"mappings":"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","sourcesContent":["\n\nexport default class Sprite {\n\n    constructor(img, height, width, loopLeng, startFramePos, parentObj, maxFrameCount = 15) {\n        this.image = new Image();\n        this.image.src = img;\n        this.loopLeng = loopLeng;\n        this.loopC = 0;\n        this.frameCount = 0;\n        this.height = height;\n        this.width = width;\n        this.startFramePos = startFramePos;\n        this.step = this.step.bind(this);\n        this.drawFrame = this.drawFrame.bind(this);\n        this.parentObj = parentObj;\n        this.maxFrameCount = maxFrameCount;\n        this.invisible = true;\n    }\n    step(ctx, object, xView, yView, heightMultiplier = 1, widthMultiplier = 1, trapped) {\n        this.frameCount++;\n        if(this.loopC>= this.loopLeng && trapped){\n            this.drawFinalFrame(ctx, object, xView, yView, heightMultiplier, widthMultiplier);\n        } else {\n            this.drawFrame(ctx, object, xView, yView, heightMultiplier, widthMultiplier);\n        }\n        if (this.frameCount < this.maxFrameCount) {\n            return;\n        }\n        this.frameCount = 0;\n        this.loopC++;\n        if (this.loopC >= this.loopLeng && !trapped) {\n            this.loopC = 0;\n            if (this.parentObj){\n                this.parentObj.attacking = false;\n            }\n        }\n    }\n    drawFrame(ctx, object, xView, yView, heightMultiplier = 1, widthMultiplier = 1) {\n        ctx.drawImage(\n            this.image,\n            this.loopC * this.width,\n            this.startFramePos[1],\n            this.width,\n            this.height,\n            (object.x - object.width / 2) - xView,\n            (object.y - object.height / 2) - yView,\n            this.width * widthMultiplier,\n            this.height * heightMultiplier\n        );\n    }\n    drawFirstFrame(ctx, object, xView, yView, heightMultiplier = 1, widthMultiplier = 1) {\n        ctx.drawImage(\n            this.image,\n            this.startFramePos[0],\n            this.startFramePos[1],\n            this.width,\n            this.height,\n            (object.x - object.width / 2) - xView,\n            (object.y - object.height / 2) - yView,\n            this.width * widthMultiplier,\n            this.height * heightMultiplier\n        );\n    }\n    drawFinalFrame(ctx, object, xView, yView, heightMultiplier = 1, widthMultiplier = 1) {\n        ctx.drawImage(\n            this.image,\n            (this.loopLeng-1) * this.width,\n            this.startFramePos[1],\n            this.width,\n            this.height,\n            (object.x - object.width / 2) - xView,\n            (object.y - object.height / 2) - yView,\n            this.height * heightMultiplier,\n            this.width * widthMultiplier\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}