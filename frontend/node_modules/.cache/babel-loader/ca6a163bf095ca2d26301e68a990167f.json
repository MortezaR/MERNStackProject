{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Novirius/Documents/aAProjects/MERNStackProject/frontend/src/components/gameCanvas.js\";\nimport React from 'react';\nimport Game from '../client/game';\nimport Sound from 'react-sound';\nimport worldMusic from '../assets/sound/gflop.mp3';\nimport { playSound } from '../util/sound_util'; // import './gameCanvas.scss';\n\nclass GameCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleRightClick = this.handleRightClick.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.game = null;\n    this.canvas = null;\n    this.socket = this.props.socket;\n    this.state = {\n      sound: 'Sound.status.PAUSED'\n    };\n  } // componentDidMount(){\n  // this.canvas = document.getElementById(\"canvas\");\n  // this.canvas = document.querySelector(\"#canvas\");\n  // console.log(this.canvas)\n  // }\n\n\n  playGame() {\n    console.log(\"setting up new game\");\n    this.game = new Game(this.props.myId);\n    this.socket.on('newWolf', playerData => this.game.addNewPlayer(playerData, true));\n    this.socket.on('newPiglet', playerData => this.game.addNewPlayer(playerData, false));\n    this.socket.on('currentPlayers', playersData => this.game.addCurrentPlayers(playersData));\n    this.socket.on('endGame', () => {\n      this.game.gameOver = true;\n      setTimeout(() => {\n        this.props.backToLobby();\n      }, 5000);\n    });\n    this.socket.on('disconnectUser', id => this.game.disconnectPlayer(id));\n    this.socket.on('disconnectHost', () => this.disconnectHost());\n    this.socket.on('updateGame', (playerData, gameData, gameInfo) => this.game.gameLoop(playerData, gameData, gameInfo));\n    setTimeout(() => {\n      console.log(\"players are all ready timeout\");\n      console.log(this.props);\n      let data = {\n        roomName: this.props.roomName,\n        roomId: this.props.roomId,\n        map: this.props.map\n      };\n      if (this.props.host) this.socket.emit('playersAllReady', data);\n    }, 1000);\n  }\n\n  disconnectHost() {\n    this.game.gameOver = true;\n    window.removeEventListener('keypress', this.handleKeyPress);\n    this.props.backToLobby();\n  }\n\n  handleClick(e) {\n    console.log(\"iminside move data\");\n\n    if (this.game.canvas && !this.game.gameOver) {\n      const rect = this.game.canvas.getBoundingClientRect();\n      const canvasX = e.clientX - rect.left;\n      const canvasY = e.clientY - rect.top;\n      let clickPos = [canvasX + this.game.camera.xView, canvasY + this.game.camera.yView];\n      let moveData = {\n        clickPos,\n        type: \"move\",\n        gameId: this.props.roomId\n      };\n      this.socket.emit('newClickMove', moveData);\n      console.log(moveData);\n    }\n  }\n\n  handleRightClick(e) {\n    e.preventDefault();\n\n    if (this.game.canvas && !this.game.gameOver) {\n      let clickPos = [e.clientX + this.game.camera.xView, e.clientY + this.game.camera.yView];\n      this.game.player.attacking = true;\n      let moveData = {\n        clickPos,\n        type: \"attack\",\n        gameId: this.props.roomId\n      };\n      this.socket.emit('newClickMove', moveData); // playSound('rClick');\n    }\n  }\n\n  handleKeyPress(e) {\n    if (this.game.canvas && !this.game.gameOver) {\n      e.preventDefault();\n      let clickPos = [e.clientX + this.game.camera.xView, e.clientY + this.game.camera.yView];\n      let moveData = {\n        clickPos,\n        type: \"trap\",\n        gameId: this.props.roomId\n      };\n      this.socket.emit('newClickMove', moveData);\n    }\n  }\n\n  componentDidMount() {\n    this.playGame();\n    window.addEventListener('keypress', this.handleKeyPress);\n    this.setState({\n      sound: 'Sound.status.PLAYING'\n    });\n  }\n\n  render() {\n    console.log(this.handleClick);\n    let width = window.innerWidth > 1600 ? 1600 : window.innerWidth;\n    let height = window.innerHeight > 800 ? 800 : window.innerHeight;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"canvas\",\n      className: \"game-canvas\",\n      onClick: this.handleClick,\n      onContextMenu: this.handleRightClick,\n      width: width,\n      height: height - 55,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Sound, {\n      url: worldMusic,\n      onClick: this.handleSoundClick,\n      playStatus: `PLAYING`,\n      playFromPosition: 30\n      /* in milliseconds */\n      ,\n      loop: true,\n      volume: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default GameCanvas;","map":{"version":3,"sources":["/mnt/c/Users/Novirius/Documents/aAProjects/MERNStackProject/frontend/src/components/gameCanvas.js"],"names":["React","Game","Sound","worldMusic","playSound","GameCanvas","Component","constructor","props","handleClick","bind","handleRightClick","handleKeyPress","game","canvas","socket","state","sound","playGame","console","log","myId","on","playerData","addNewPlayer","playersData","addCurrentPlayers","gameOver","setTimeout","backToLobby","id","disconnectPlayer","disconnectHost","gameData","gameInfo","gameLoop","data","roomName","roomId","map","host","emit","window","removeEventListener","e","rect","getBoundingClientRect","canvasX","clientX","left","canvasY","clientY","top","clickPos","camera","xView","yView","moveData","type","gameId","preventDefault","player","attacking","componentDidMount","addEventListener","setState","render","width","innerWidth","height","innerHeight","handleSoundClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Game from '../client/game'\nimport Sound from 'react-sound';\nimport worldMusic from '../assets/sound/gflop.mp3';\nimport { playSound } from '../util/sound_util';\n// import './gameCanvas.scss';\n\nclass GameCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleRightClick = this.handleRightClick.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.game = null;\n    this.canvas = null;\n    this.socket = this.props.socket;\n    this.state = {\n      sound: 'Sound.status.PAUSED'\n    }\n  }\n\n  // componentDidMount(){\n    // this.canvas = document.getElementById(\"canvas\");\n    // this.canvas = document.querySelector(\"#canvas\");\n    // console.log(this.canvas)\n  // }\n\n  playGame() {\n    console.log(\"setting up new game\")\n    this.game = new Game(this.props.myId);\n    this.socket.on('newWolf', (playerData) => this.game.addNewPlayer(playerData, true))\n    this.socket.on('newPiglet', (playerData) => this.game.addNewPlayer(playerData, false))\n    this.socket.on('currentPlayers', (playersData) => this.game.addCurrentPlayers(playersData))\n    this.socket.on('endGame', () => {\n      this.game.gameOver = true;\n      setTimeout(() => {\n        this.props.backToLobby();\n      }, 5000)\n    })\n    this.socket.on('disconnectUser', (id) => this.game.disconnectPlayer(id))\n    this.socket.on('disconnectHost', () => this.disconnectHost())\n    this.socket.on('updateGame', (playerData, gameData, gameInfo) => this.game.gameLoop(playerData, gameData, gameInfo))\n    setTimeout(() => {\n      console.log(\"players are all ready timeout\")\n      console.log(this.props);\n      let data = {roomName: this.props.roomName, roomId: this.props.roomId, map: this.props.map}\n      if (this.props.host) this.socket.emit('playersAllReady', data)\n    }, 1000);\n  }\n\n  disconnectHost(){\n    this.game.gameOver = true;\n    window.removeEventListener('keypress', this.handleKeyPress);\n    this.props.backToLobby();\n  }\n\n  handleClick(e) {\n    console.log(\"iminside move data\")\n    if(this.game.canvas && !this.game.gameOver){\n      \n      const rect = this.game.canvas.getBoundingClientRect()\n      const canvasX = e.clientX - rect.left\n      const canvasY = e.clientY - rect.top\n      let clickPos = [canvasX + this.game.camera.xView, canvasY + this.game.camera.yView]\n      let moveData = { clickPos, type: \"move\", gameId: this.props.roomId }\n      this.socket.emit('newClickMove', moveData)\n      console.log(moveData)\n    }\n  }\n\n  handleRightClick(e) {\n    e.preventDefault();\n    if (this.game.canvas && !this.game.gameOver) {\n      let clickPos = [e.clientX + this.game.camera.xView, e.clientY + this.game.camera.yView];\n      this.game.player.attacking = true;\n      let moveData = { clickPos, type: \"attack\", gameId: this.props.roomId  }\n      this.socket.emit('newClickMove', moveData);\n      // playSound('rClick');\n    }\n  }\n\n  handleKeyPress(e) {\n    if (this.game.canvas && !this.game.gameOver) {\n      e.preventDefault();\n      let clickPos = [e.clientX + this.game.camera.xView, e.clientY + this.game.camera.yView]\n      let moveData = { clickPos, type: \"trap\", gameId: this.props.roomId  }\n      this.socket.emit('newClickMove', moveData)\n    }\n  }\n\n  componentDidMount() {\n    this.playGame();\n    window.addEventListener('keypress', this.handleKeyPress);\n    this.setState({\n      sound: 'Sound.status.PLAYING'\n    })\n\n  }\n\n\n\n  render() {\n    console.log(this.handleClick)\n    let width = window.innerWidth > 1600 ?  1600 : window.innerWidth\n    let height = window.innerHeight > 800 ?  800 : window.innerHeight\n    return (\n      <div>\n        <canvas \n          id=\"canvas\" \n          className=\"game-canvas\"\n          onClick={this.handleClick} \n          onContextMenu={this.handleRightClick} \n          width={width} \n          height={height - 55}>\n        </canvas>\n        <Sound\n          url={worldMusic}\n          onClick={this.handleSoundClick}\n          playStatus={`PLAYING`}\n          playFromPosition={30 /* in milliseconds */}\n          loop={true}\n          volume={1}\n        />\n      </div>\n    )\n  }\n}\n\nexport default GameCanvas\n"]},"metadata":{},"sourceType":"module"}